@model PagedList.IPagedList<OnlineExam.ViewModels.VMStudentWiseBatch>
@using PagedList.Mvc;
@{
    if (Request.IsAjaxRequest())
    {
        Layout = null;
    }
    else
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
    ViewBag.Title = "Index";
    int size = 10;

    if (ViewBag.NoOfRows != null)
    {
        size = ViewBag.NoOfRows;
    };
    int Nopage = 1;
    if (ViewBag.page != null)
    {
        Nopage = ViewBag.page;
    };
    int row = size * Nopage;
    row = row - size;
}
<style>
    .btnActive {
        color: green;
        font-weight: bold;
        text-decoration: none;
    }

        .btnActive:hover {
            color: green;
            text-decoration: underline;
            cursor: pointer;
        }

    .btnInactive {
        color: red;
        font-weight: bold;
        text-decoration: none;
    }

        .btnInactive:hover {
            color: red;
            text-decoration: underline;
            cursor: pointer;
        }
</style>
<section class="content-header" style="background-color: #ecf0f5;">
    <h1>
        Students
        <small>All Students</small>
    </h1>
    <ol class="breadcrumb" style="float:left">
        <li><a href="#"><i class="fa fa-dashboard"></i> Master Data</a></li>
        <li class="active">Students</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <!-- Small boxes (Stat box) -->
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header" style="border-bottom: 1px dotted #e4e0e0;">
                    <h1 class="box-title"> <i class="fa fa-fw fa-table"></i>List of Students</h1>
                    
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div class="row">
                        <div class="col-sm-6">
                            @using (Ajax.BeginForm("StudentWiseBatch", "Account", FormMethod.Get, new AjaxOptions
                            {
                                UpdateTargetId = "BodyContainer",
                                InsertionMode = InsertionMode.Replace
                            }))
                            {

                                
                                    <table class="table table-bordered table-hover" >
                                        <tr>
                                            <td>
                                                <i class="fa fa-filter" style=" color: #aeaeae; font-size: 22px;"></i>
                                            </td>
                                            <td>
                                                @Html.TextBox("NoOfRows", ViewBag.NoOfRows as string, new { @type = "number", @min = "3", @max = "100", @class = "form-control " })
                                            </td>
                                            <td>
                                                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control ", placeholder = "Student ID" })
                                            </td>
                                            <td>
                                                <button type="submit" class="btn btn-light" style="background-color: #e6e6e6; "><i class="fa fa-search-plus" style="margin-right:5px; color:#808080"></i>Serach</button>
                                            </td>
                                        </tr>
                                    </table>

                                
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                                <table id="example2" class="table table-bordered table-hover">
                                    <thead>
                                        <tr style="background-color: #3c8dbc; color: white; ">
                                            <th>#</th>
                                            <th>
                                                Student ID
                                            </th>
                                            <th>
                                                Name
                                            </th>
                                            <th>
                                                Phone No
                                            </th>
                                            <th>
                                                Email
                                            </th>
                                            <th>
                                                Batch
                                            </th>
                                            <th>Status</th>
                                        </tr>
                                    </thead>
                                    @foreach (var item in Model)
                                    {
                                        row++;
                                <tr>
                                    <td>@row</td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.StudentID)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.StudentName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.MobileNo)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Email)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.BatchName)
                                    </td>
                                    <td>

                                        @if (item.IsActive)
                                        {
                                            <a style="" href="@Url.Action("DeactivateStudentBatch","Account", new { id = item.Id,page=Nopage,searchString=ViewBag.CurrentFilter,NoOfRows=ViewBag.NoOfRows })" class="btnActive" title="Deactivate" onclick="return DeActivateStudent(this)">
                                                Active
                                            </a>
                                        }
                                        else
                                        {
                                            <a style="" href="@Url.Action("ActivateStudentBatch","Account", new { id = item.Id,page=Nopage,searchString=ViewBag.CurrentFilter,NoOfRows=ViewBag.NoOfRows })" class="btnInactive" title="Activate " onclick="return ActivateStudent(this)">
                                                InActive
                                            </a>

                                        }
                                    </td>
                                </tr>
                                    }

                                </table>

                        </div>
                    </div>
                    <div class="row" style="margin:0px;">
                        @Html.PagedListPager(Model, page => Url.Action("Index",
                                            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, NoOfRows = ViewBag.NoOfRows }),
                                                             PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "BodyContainer" }))



                    </div>
                </div>
                <!-- /.box-body -->
            </div>

        </div>
    </div>
</section>

